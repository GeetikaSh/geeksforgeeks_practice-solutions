###
Given a NxN matrix of positive integers. There are only three possible moves from a cell Matrix[r][c].

Matrix [r+1] [c]
Matrix [r+1] [c-1]
Matrix [r+1] [c+1]
Starting from any column in row 0 return the largest sum of any of the paths up to row N-1.

Example 1:

Input: N = 2
Matrix = {{348, 391},
          {618, 193}}
Output: 1009
Explaination: The best path is 391 -> 618. 
It gives the sum = 1009.
###

class Solution:
    def maximumPath(self, N, M):
        # code here
        for i in range(1,N):
            for j in range (N):
                if j==0:
                    M[i][j]=M[i][j]+max(M[i-1][j],M[i-1][j+1])
                elif j==N-1:
                    M[i][j]=M[i][j]+max(M[i-1][j],M[i-1][j-1])
                else:
                    M[i][j]=M[i][j]+max(M[i-1][j],M[i-1][j-1],M[i-1][j+1])
                    
        x=max(M[N-1][j] for j in range(N))
        return(x)
